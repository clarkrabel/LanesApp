/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2015-11-16 19:10:01 UTC)
 * on 2016-01-05 at 04:03:00 UTC 
 * Modify at your own risk.
 */

package com.twistedevelepment.lanesapp.backend.coolStuff;

/**
 * Service definition for CoolStuff (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CoolStuffRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CoolStuff extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the coolStuff library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "coolStuff/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CoolStuff(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CoolStuff(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the PostsEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CoolStuff coolStuff = new CoolStuff(...);}
   *   {@code CoolStuff.PostsEndpoint.List request = coolStuff.postsEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public PostsEndpoint postsEndpoint() {
    return new PostsEndpoint();
  }

  /**
   * The "postsEndpoint" collection of methods.
   */
  public class PostsEndpoint {

    /**
     * Create a request for the method "postsEndpoint.getPosts".
     *
     * This request holds the parameters needed by the coolStuff server.  After setting any optional
     * parameters, call the {@link GetPosts#execute()} method to invoke the remote operation.
     *
     * @param post
     * @return the request
     */
    public GetPosts getPosts(java.lang.String post) throws java.io.IOException {
      GetPosts result = new GetPosts(post);
      initialize(result);
      return result;
    }

    public class GetPosts extends CoolStuffRequest<com.twistedevelepment.lanesapp.backend.coolStuff.model.PostsCollection> {

      private static final String REST_PATH = "postscollection/{post}";

      /**
       * Create a request for the method "postsEndpoint.getPosts".
       *
       * This request holds the parameters needed by the the coolStuff server.  After setting any
       * optional parameters, call the {@link GetPosts#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetPosts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param post
       * @since 1.13
       */
      protected GetPosts(java.lang.String post) {
        super(CoolStuff.this, "GET", REST_PATH, null, com.twistedevelepment.lanesapp.backend.coolStuff.model.PostsCollection.class);
        this.post = com.google.api.client.util.Preconditions.checkNotNull(post, "Required parameter post must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPosts setAlt(java.lang.String alt) {
        return (GetPosts) super.setAlt(alt);
      }

      @Override
      public GetPosts setFields(java.lang.String fields) {
        return (GetPosts) super.setFields(fields);
      }

      @Override
      public GetPosts setKey(java.lang.String key) {
        return (GetPosts) super.setKey(key);
      }

      @Override
      public GetPosts setOauthToken(java.lang.String oauthToken) {
        return (GetPosts) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPosts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPosts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPosts setQuotaUser(java.lang.String quotaUser) {
        return (GetPosts) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPosts setUserIp(java.lang.String userIp) {
        return (GetPosts) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String post;

      /**

       */
      public java.lang.String getPost() {
        return post;
      }

      public GetPosts setPost(java.lang.String post) {
        this.post = post;
        return this;
      }

      @Override
      public GetPosts set(String parameterName, Object value) {
        return (GetPosts) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the UsersEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CoolStuff coolStuff = new CoolStuff(...);}
   *   {@code CoolStuff.UsersEndpoint.List request = coolStuff.usersEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public UsersEndpoint usersEndpoint() {
    return new UsersEndpoint();
  }

  /**
   * The "usersEndpoint" collection of methods.
   */
  public class UsersEndpoint {

    /**
     * Create a request for the method "usersEndpoint.getUsers".
     *
     * This request holds the parameters needed by the coolStuff server.  After setting any optional
     * parameters, call the {@link GetUsers#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetUsers getUsers() throws java.io.IOException {
      GetUsers result = new GetUsers();
      initialize(result);
      return result;
    }

    public class GetUsers extends CoolStuffRequest<com.twistedevelepment.lanesapp.backend.coolStuff.model.ChatUsersCollection> {

      private static final String REST_PATH = "chatuserscollection";

      /**
       * Create a request for the method "usersEndpoint.getUsers".
       *
       * This request holds the parameters needed by the the coolStuff server.  After setting any
       * optional parameters, call the {@link GetUsers#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetUsers() {
        super(CoolStuff.this, "GET", REST_PATH, null, com.twistedevelepment.lanesapp.backend.coolStuff.model.ChatUsersCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetUsers setAlt(java.lang.String alt) {
        return (GetUsers) super.setAlt(alt);
      }

      @Override
      public GetUsers setFields(java.lang.String fields) {
        return (GetUsers) super.setFields(fields);
      }

      @Override
      public GetUsers setKey(java.lang.String key) {
        return (GetUsers) super.setKey(key);
      }

      @Override
      public GetUsers setOauthToken(java.lang.String oauthToken) {
        return (GetUsers) super.setOauthToken(oauthToken);
      }

      @Override
      public GetUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetUsers) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetUsers setQuotaUser(java.lang.String quotaUser) {
        return (GetUsers) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetUsers setUserIp(java.lang.String userIp) {
        return (GetUsers) super.setUserIp(userIp);
      }

      @Override
      public GetUsers set(String parameterName, Object value) {
        return (GetUsers) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "addUser".
   *
   * This request holds the parameters needed by the coolStuff server.  After setting any optional
   * parameters, call the {@link AddUser#execute()} method to invoke the remote operation.
   *
   * @param firstName
   * @param lastName
   * @return the request
   */
  public AddUser addUser(java.lang.String firstName, java.lang.String lastName) throws java.io.IOException {
    AddUser result = new AddUser(firstName, lastName);
    initialize(result);
    return result;
  }

  public class AddUser extends CoolStuffRequest<com.twistedevelepment.lanesapp.backend.coolStuff.model.ChatUsers> {

    private static final String REST_PATH = "chatusers/{firstName}/{lastName}";

    /**
     * Create a request for the method "addUser".
     *
     * This request holds the parameters needed by the the coolStuff server.  After setting any
     * optional parameters, call the {@link AddUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param firstName
     * @param lastName
     * @since 1.13
     */
    protected AddUser(java.lang.String firstName, java.lang.String lastName) {
      super(CoolStuff.this, "POST", REST_PATH, null, com.twistedevelepment.lanesapp.backend.coolStuff.model.ChatUsers.class);
      this.firstName = com.google.api.client.util.Preconditions.checkNotNull(firstName, "Required parameter firstName must be specified.");
      this.lastName = com.google.api.client.util.Preconditions.checkNotNull(lastName, "Required parameter lastName must be specified.");
    }

    @Override
    public AddUser setAlt(java.lang.String alt) {
      return (AddUser) super.setAlt(alt);
    }

    @Override
    public AddUser setFields(java.lang.String fields) {
      return (AddUser) super.setFields(fields);
    }

    @Override
    public AddUser setKey(java.lang.String key) {
      return (AddUser) super.setKey(key);
    }

    @Override
    public AddUser setOauthToken(java.lang.String oauthToken) {
      return (AddUser) super.setOauthToken(oauthToken);
    }

    @Override
    public AddUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddUser setQuotaUser(java.lang.String quotaUser) {
      return (AddUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddUser setUserIp(java.lang.String userIp) {
      return (AddUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String firstName;

    /**

     */
    public java.lang.String getFirstName() {
      return firstName;
    }

    public AddUser setFirstName(java.lang.String firstName) {
      this.firstName = firstName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String lastName;

    /**

     */
    public java.lang.String getLastName() {
      return lastName;
    }

    public AddUser setLastName(java.lang.String lastName) {
      this.lastName = lastName;
      return this;
    }

    @Override
    public AddUser set(String parameterName, Object value) {
      return (AddUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sendPost".
   *
   * This request holds the parameters needed by the coolStuff server.  After setting any optional
   * parameters, call the {@link SendPost#execute()} method to invoke the remote operation.
   *
   * @param post
   * @param poster
   * @return the request
   */
  public SendPost sendPost(java.lang.String post, java.lang.String poster) throws java.io.IOException {
    SendPost result = new SendPost(post, poster);
    initialize(result);
    return result;
  }

  public class SendPost extends CoolStuffRequest<com.twistedevelepment.lanesapp.backend.coolStuff.model.Posts> {

    private static final String REST_PATH = "posts/{post}/{poster}";

    /**
     * Create a request for the method "sendPost".
     *
     * This request holds the parameters needed by the the coolStuff server.  After setting any
     * optional parameters, call the {@link SendPost#execute()} method to invoke the remote operation.
     * <p> {@link
     * SendPost#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param post
     * @param poster
     * @since 1.13
     */
    protected SendPost(java.lang.String post, java.lang.String poster) {
      super(CoolStuff.this, "POST", REST_PATH, null, com.twistedevelepment.lanesapp.backend.coolStuff.model.Posts.class);
      this.post = com.google.api.client.util.Preconditions.checkNotNull(post, "Required parameter post must be specified.");
      this.poster = com.google.api.client.util.Preconditions.checkNotNull(poster, "Required parameter poster must be specified.");
    }

    @Override
    public SendPost setAlt(java.lang.String alt) {
      return (SendPost) super.setAlt(alt);
    }

    @Override
    public SendPost setFields(java.lang.String fields) {
      return (SendPost) super.setFields(fields);
    }

    @Override
    public SendPost setKey(java.lang.String key) {
      return (SendPost) super.setKey(key);
    }

    @Override
    public SendPost setOauthToken(java.lang.String oauthToken) {
      return (SendPost) super.setOauthToken(oauthToken);
    }

    @Override
    public SendPost setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SendPost) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SendPost setQuotaUser(java.lang.String quotaUser) {
      return (SendPost) super.setQuotaUser(quotaUser);
    }

    @Override
    public SendPost setUserIp(java.lang.String userIp) {
      return (SendPost) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String post;

    /**

     */
    public java.lang.String getPost() {
      return post;
    }

    public SendPost setPost(java.lang.String post) {
      this.post = post;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String poster;

    /**

     */
    public java.lang.String getPoster() {
      return poster;
    }

    public SendPost setPoster(java.lang.String poster) {
      this.poster = poster;
      return this;
    }

    @Override
    public SendPost set(String parameterName, Object value) {
      return (SendPost) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link CoolStuff}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link CoolStuff}. */
    @Override
    public CoolStuff build() {
      return new CoolStuff(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CoolStuffRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCoolStuffRequestInitializer(
        CoolStuffRequestInitializer coolstuffRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(coolstuffRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
